# encryption
encryption = "age"

[age]
    identity = "~/.config/chezmoi/key.txt"
    recipient = "age1gprzkls56fh4ytz23rzlc3e2gxcadw5fn9sztavjuvf9kvv39qks6fcfe0"

# dir paths

cacheDir = "{{ env "XDG_CACHE_HOME" | default (printf "%s/.cache" .chezmoi.homeDir) }}/chezmoi"
destDir = {{ env "HOME" | quote }}
persistentState = "{{ env "XDG_CONFIG_HOME" | default (printf "%s/.config" .chezmoi.homeDir) }}/chezmoi/chezmoi.boltdb"
sourceDir = "{{ env "XDG_DATA_HOME" | default (printf "%s/.local/share" .chezmoi.homeDir) }}/chezmoi/home"

[edit]
    command = "code"
    args = ["--wait"]

[diff]
    command = "delta"
    pager = "delta"
    exclude = ["scripts"]

[merge]
# use vscode as merge tool
    command = "bash"
    args = [
        "-c",
        "cp {{ `{{ .Target }}` }} {{ `{{ .Target }}.base` }} && code --new-window --wait --merge {{ `{{ .Destination }}` }} {{ `{{ .Target }}` }} {{ `{{ .Target }}.base` }} {{ `{{ .Source }}` }}",
    ]


# [merge]
#    command = "nvim"
#    args = ["-d", "{{ `{{ .Source }}` }}", "{{ `{{ .Destination }}` }}", "{{ `{{ .Target }}` }}"]


{{ $email := promptStringOnce . "gitEmail" "git email id" -}}
{{ $isWorkMachine := promptBoolOnce . "isWorkMachine" "is this a work machine" -}}

[data]
    gitEmail = {{ $email | quote }}
    isWorkMachine = {{ $isWorkMachine }}